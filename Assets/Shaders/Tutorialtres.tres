[gd_resource type="VisualShader" load_steps=17 format=3 uid="uid://bjvmsyqg8t374"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_weq6f"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(1, 1, 0.188235, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wgdqi"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_j3nct"]
parameter_name = "MainText"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_p214s"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_k8wjb"]
source = 5

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_o1oet"]
default_input_values = [0, Vector3(0.5, 0.5, 0.5), 1, Vector3(0, 0, 0)]
operator = 7

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_xivdo"]
billboard_type = 2
keep_scale = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wrguh"]
input_name = "time"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_yqby8"]
noise_type = 2
fractal_type = 0
cellular_distance_function = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1yt5f"]
seamless = true
noise = SubResource("FastNoiseLite_yqby8")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_q4fn6"]
texture = SubResource("NoiseTexture2D_1yt5f")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_tsuu5"]
default_input_values = [1, Vector2(0.5, 0.5), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4av84"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n3cmy"]
input_name = "normal"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_dyjte"]
default_input_values = [0, Vector4(0, 0, 0, 0), 1, Vector4(1, 1, 1, 1), 2, Vector4(0, 0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_gkg4g"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_4;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 0.188235, 1.000000);
uniform sampler2D MainText;



void vertex() {
// Input:3
	float n_out3p0 = TIME;


// UVFunc:5
	vec2 n_in5p1 = vec2(0.50000, 0.50000);
	vec2 n_out5p0 = vec2(n_out3p0) * n_in5p1 + UV;


// Texture2D:4
	vec4 n_out4p0 = texture(tex_vtx_4, n_out5p0);


// Input:7
	vec3 n_out7p0 = NORMAL;


// VectorOp:9
	vec3 n_in9p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out9p0 = n_out7p0 * n_in9p1;


// Input:6
	vec3 n_out6p0 = VERTEX;


// MultiplyAdd:8
	vec4 n_out8p0 = fma(n_out4p0, vec4(n_out9p0, 0.0), vec4(n_out6p0, 0.0));


	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __mvm = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], MODEL_MATRIX[1], vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, MODEL_MATRIX[1].xyz)), 0.0), MODEL_MATRIX[3]);
		__mvm = __mvm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = __mvm;
	}


// Output:0
	VERTEX = vec3(n_out8p0.xyz);
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// ColorParameter:11
	vec4 n_out11p0 = ColorParameter;


// VectorOp:12
	vec4 n_in12p1 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out12p0 = n_out11p0 + n_in12p1;


	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(MainText, UV);


// VectorDecompose:4
	float n_out4p0 = n_out8p0.x;
	float n_out4p1 = n_out8p0.y;
	float n_out4p2 = n_out8p0.z;
	float n_out4p3 = n_out8p0.w;


// Output:0
	ALBEDO = vec3(n_out12p0.xyz);
	ALPHA = n_out4p3;


}

void light() {
	vec3 n_out2p0;
// ColorOp:2
	vec3 n_in2p0 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_in2p1 = vec3(0.00000, 0.00000, 0.00000);
	{
		float base = n_in2p0.x;
		float blend = n_in2p1.x;
		if (base < 0.5) {
			n_out2p0.x = (base * (blend + 0.5));
		} else {
			n_out2p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_in2p0.y;
		float blend = n_in2p1.y;
		if (base < 0.5) {
			n_out2p0.y = (base * (blend + 0.5));
		} else {
			n_out2p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_in2p0.z;
		float blend = n_in2p1.z;
		if (base < 0.5) {
			n_out2p0.z = (base * (blend + 0.5));
		} else {
			n_out2p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// Output:0
	DIFFUSE_LIGHT = n_out2p0;


}
"
graph_offset = Vector2(-602.877, -104.55)
flags/unshaded = true
nodes/vertex/0/position = Vector2(540, 180)
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_xivdo")
nodes/vertex/2/position = Vector2(60, 240)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_wrguh")
nodes/vertex/3/position = Vector2(-900, 80)
nodes/vertex/4/node = SubResource("VisualShaderNodeTexture_q4fn6")
nodes/vertex/4/position = Vector2(-200, -180)
nodes/vertex/5/node = SubResource("VisualShaderNodeUVFunc_tsuu5")
nodes/vertex/5/position = Vector2(-560, 20)
nodes/vertex/6/node = SubResource("VisualShaderNodeInput_4av84")
nodes/vertex/6/position = Vector2(-700, 460)
nodes/vertex/7/node = SubResource("VisualShaderNodeInput_n3cmy")
nodes/vertex/7/position = Vector2(-800, 300)
nodes/vertex/8/node = SubResource("VisualShaderNodeMultiplyAdd_dyjte")
nodes/vertex/8/position = Vector2(160, 40)
nodes/vertex/9/node = SubResource("VisualShaderNodeVectorOp_gkg4g")
nodes/vertex/9/position = Vector2(-320, 120)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10, 3, 0, 5, 2, 5, 0, 4, 0, 4, 0, 8, 0, 6, 0, 8, 2, 7, 0, 9, 0, 9, 0, 8, 1, 8, 0, 0, 0)
nodes/fragment/0/position = Vector2(380, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_j3nct")
nodes/fragment/2/position = Vector2(-1080, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_p214s")
nodes/fragment/4/position = Vector2(20, 240)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_k8wjb")
nodes/fragment/8/position = Vector2(-540, 200)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorParameter_weq6f")
nodes/fragment/11/position = Vector2(-1020, -180)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorOp_wgdqi")
nodes/fragment/12/position = Vector2(-70.9277, -82.1422)
nodes/fragment/connections = PackedInt32Array(11, 0, 12, 0, 8, 0, 4, 0, 2, 0, 8, 2, 4, 3, 0, 1, 12, 0, 0, 0)
nodes/light/2/node = SubResource("VisualShaderNodeColorOp_o1oet")
nodes/light/2/position = Vector2(100, 140)
nodes/light/connections = PackedInt32Array(2, 0, 0, 0)
